apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: mini-kassenbuch
spec:
  selector:
    matchLabels:
      app: mini-kassenbuch
  replicas: 1
  serviceName: mini-kassenbuch-service
  template:
    metadata:
      labels:
        app: mini-kassenbuch
    spec:
      containers:
      - name: mini-kassenbuch
        image: tsgames/mini-kassenbuch:latest
        ports:
        - containerPort: 80
        volumeMounts:
          - mountPath: "/var/www/html/data"
            name: data-storage
        resources:
          limits:
            cpu: {{.Values.limitCPU | default "500m" }}
            memory: {{.Values.limitMemory | default "512Mi" }}
          requests:
            cpu: {{.Values.requestCPU | default "50m" }}
            memory: {{.Values.requestMemory | default "128Mi" }}
      volumes:
      - name: data-storage
        persistentVolumeClaim:
          claimName: data-storage-claim
  volumeClaimTemplates:
  - metadata:
      name: data-storage
    spec:
      accessModes:
        - ReadWriteOnce
      resources:
        requests:
          storage: {{.Values.storageCapacity | default "16Gi" }}

---

kind: Service
apiVersion: v1
metadata:
  name: mini-kassenbuch-service
spec:
  selector:
    app: mini-kassenbuch
  ports:
    - port: 80 # Default port for image

---
apiVersion: networking.k8s.io/v1
kind: Ingress
annotations:
metadata:
  name: mini-kassenbuch-ingress
spec:
  #ingressClassName: nginx # change this to your Ingressclass you have created in your cluster
  rules:
  - host: {{ .Values.domain }}
    http:
      paths:
      - backend:
          service:
            name: mini-kassenbuch-service
            port:
              number: 80
        path: /
        pathType: Prefix